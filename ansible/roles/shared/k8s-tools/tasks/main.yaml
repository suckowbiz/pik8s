# Intentionally created to install kubeadm toolbox
--- 
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#before-you-begin
- name: apply unique hostname to satisfy kubeadm requirements
  hostname:
    name: "{{ inventory_hostname }}"

- name: add hostname to /etc/hosts for local lookup
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: 127.0.0.1 localhost {{ inventory_hostname }}
    owner: root
    group: root
    mode: '0644'

- name: swap disabling as of https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#before-you-begin 
  block:
    - name: disable swap in order for the kubelet to work properly 
      shell: swapoff --all 
      args:
        creates: "{{ marker.swap_disabled }}"
      notify: mark swap disabled

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#ensure-iptables-tooling-does-not-use-the-nftables-backend
- name: replace nftables with iptables to be compatible with the current kubeadm packages (duplicated firewall rules, breaks kube-proxy)
  block:
    - name: provide missing legacy versions for nftables toolbox as fallback
      apt:
        name: "{{ item }}"
        state: present
        force_apt_get: yes
      loop:
        - arptables
        - ebtables
        - iptables
    - name: apply legacy fallback to avoid nftables
      alternatives:
        name: "{{ item.name }}"
        path: "{{ item.path }}"
      loop:
        - { name: 'iptables', path: '/usr/sbin/iptables-legacy' }
        - { name: 'ip6tables', path: '/usr/sbin/ip6tables-legacy' }
        - { name: 'arptables', path: '/usr/sbin/arptables-legacy' }
        - { name: 'ebtables', path: '/usr/sbin/ebtables-legacy' }

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl
- name: set up kubeadm tooling to be able to create a cluster
  block:
    - name: add apt signing key for kubeadm tooling to ensure security
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    # Only kubernetes-xenial provides all required packages. Beside it is recommended here: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl
    - name: add repository to fetch Kubernetes tools
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
        state: present
    - name: update apt caches to consider added kubernetes repository
      apt:
        update_cache: yes
        force_apt_get: yes

- include_tasks: provide-kubeadm.yaml
- include_tasks: provide-kubelet-kubectl.yaml
