# Intentionally created to install docker in a specific version.
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker
---
- name: uninstall older version of docker to clean up first
  apt:
    pkg:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    update_cache: yes

- name: install packages to allow apt to use a repository over https
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present

- name: add Docker official GPG key to verify downloads
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: setting up the stable repository for ubuntu
  apt_repository:
    repo: deb [arch=arm64] https://download.docker.com/linux/ubuntu focal stable

- name: up/downgrade Docker to add the required version
  block:
  - name: remove holds to unfix Docker version
    shell: apt-mark unhold docker-ce docker-ce-cli containerd.io
    ignore_errors: yes
  - name: installing Docker "{{ versions.docker }}"
    apt:
      autoremove: yes
      # allow downgrade if neccessary
      force: true
      force_apt_get: yes
      pkg:
        - "docker-ce={{ versions.docker }}*"
        - "docker-ce-cli={{ versions.docker }}*"
        - "containerd.io={{ versions.containerd }}*"
      update_cache: yes
  - name: setting hold to fix Docker version to avoid an unwanted upgrade
    shell: apt-mark hold docker-ce docker-ce-cli containerd.io
  - name: start and enable Docker to start on boot
    service:
      enabled: yes
      state: started
      name: docker
  - name: placing Docker daemon configuration file
    copy:
      dest: /etc/docker/daemon.json
      src: daemon.json
    notify: restart docker
  - name: add ubuntu user to "docker" group to use Docker as non-root user
    user:
      name: ubuntu
      groups: docker
      append: yes